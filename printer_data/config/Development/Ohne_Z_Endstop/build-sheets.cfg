[gcode_macro SOAKED]
gcode:
    INSTALL_BUILD_SHEET NAME="soaked"

[gcode_macro UNSOAKED]
gcode:
    INSTALL_BUILD_SHEET NAME="unsoaked"


## Macro to install a build sheet
[gcode_macro INSTALL_BUILD_SHEET]
description: Install a build sheet and save settings
variable_parameter_NAME: "Unknown Build Sheet"
variable_parameter_OFFSET: 0.0
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set sheet_name = (params.NAME | default("Unknown Build Sheet") | string) %}    
    {% set sheet_offset = (params.OFFSET | default(0.0) | float) %}
    {% set sheet_key = ("build_sheet " ~ (sheet_name | lower | replace(" ", "_"))) %}
    {% set sheet = (svv[sheet_key] | default(None)) %}
    {% if not sheet %}
        # the sheet does not exist, create it
        {% set sheet = {"name": sheet_name, "offset": sheet_offset} %}
        SAVE_VARIABLE VARIABLE="{sheet_key}" VALUE="{sheet | pprint}"
    {% endif %}
    SAVE_VARIABLE VARIABLE="build_sheet installed" VALUE="'{sheet_key}'"
    LOAD_OFFSET
    SHOW_BUILD_SHEET

[gcode_macro SHOW_BUILD_SHEET]
description: Shows the current sheet
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set sheet_key = (svv["build_sheet installed"] | string) %}
    {% set sheet = (svv[sheet_key] | default(None)) %}
    {% if sheet %}
        {action_respond_info("Build sheet: %s, Offset: %.3fmm" % (sheet.name, sheet.offset))}
    {% else %}
        {action_respond_info("No build sheet installed") }
    {% endif %}

[gcode_macro SHOW_BUILD_SHEETS]
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set installed_sheet = svv["build_sheet installed"] | string %}
    {% for key_name, sheet in svv | dictsort %}
        {% if key_name.startswith("build_sheet ") and key_name != "build_sheet installed" %}
            {% set installed = " [Installed]" if key_name == installed_sheet else "" %}
            {action_respond_info("Build sheet: %s, Offset: %.3fmm%s" % (sheet.name, sheet.offset, installed))}
        {% endif %}
    {% endfor %}

[gcode_macro SET_BUILD_SHEET_OFFSET]
description: Set an arbitrary offset for the build sheet
variable_parameter_OFFSET: 0.0
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set sheet_offset = params.OFFSET | default(None) %}
    {% set sheet_key = svv["build_sheet installed"] | string %}
    {% set sheet = svv[sheet_key] | default(None) %}
    {% if (sheet_offset is not none) and sheet %}
        {% set _ = sheet.__setitem__("offset", sheet_offset | float) %}
        # {% set sheet["offset"] = sheet_offset | float %}
        SAVE_VARIABLE VARIABLE="{sheet_key}" VALUE="{sheet | pprint}"
    {% endif %}
    SHOW_BUILD_SHEET

[gcode_macro SET_GCODE_OFFSET]
rename_existing: _SET_GCODE_OFFSET
gcode:
    _SET_GCODE_OFFSET {% for p in params %}{'%s=%s '% (p, params[p])}{% endfor %}
    SAVE_GCODE_OFFSET


[gcode_macro SAVE_GCODE_OFFSET]
description: Save current offset as variable
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set sheet_key = (svv["build_sheet installed"] | string) %}
    {% set sheet = (svv[sheet_key] | default(None)) %}
    {% if sheet is defined %}
        {% set _ = sheet.__setitem__("offset", (printer.gcode_move.homing_origin.z | float)) %}
        SAVE_VARIABLE VARIABLE="{sheet_key}" VALUE="{sheet | pprint}"
        SHOW_BUILD_SHEET
    {% else %}
      {action_respond_info("Sheet not defined")}
    {% endif %}
  
[gcode_macro LOAD_OFFSET]
description: Loads the sheet offset for the installed build sheet
gcode:
    # get the offset from saved variables
    {% set svv = printer.save_variables.variables %}
    {% set sheet_key = (svv["build_sheet installed"] | string) %}
    {% set sheet = (svv[sheet_key] | default(None)) %}
    {% if sheet %}
        # log this to the console so if there is an issue with the print the user can see which sheet the printer thought it had installed
        {action_respond_info("Applying offset: %.3fmm for build sheet: %s" % (sheet.offset, sheet.name))}
        _SET_GCODE_OFFSET Z={sheet.offset}
    {% else %}
        {action_respond_info("No build sheet installed, offset adjustment: 0.000mm") }
    {% endif %}