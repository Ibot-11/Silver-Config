#  __  __                                     
# |  \/  |   __ _    ___   _ __    ___    ___ 
# | |\/| |  / _` |  / __| | '__|  / _ \  / __|
# | |  | | | (_| | | (__  | |    | (_) | \__ \
# |_|  |_|  \__,_|  \___| |_|     \___/  |___/
#                                             
[gcode_macro PRINT_START]
description: Perform calibration and get ready to print
gcode:
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set PROBE_TEMP = 150 %}
    {% set th = printer.toolhead %}

    CLEAR_PAUSE
    BED_MESH_CLEAR
    SETUP_KAMP_MESHING DISPLAY_PARAMETERS=1 FUZZ_ENABLE=1

    M107
    M117 Homing..
    G28
    G90
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 10} Z30 F30000
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={PROBE_TEMP}
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP} 
    M109 S{PROBE_TEMP}               ; wait for extruder temperature
    M190 S{BED_TEMP}                    ; wait for bed temprature

    CLEAN_NOZZLE

    M117 Gantry adjust..
    QUAD_GANTRY_LEVEL
    G28 Z

    M117 Bed Mesh calibrate..
    BED_MESH_CALIBRATE

    G90
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 10} Z30 F30000

    M109 S{EXTRUDER_TEMP}

    M117 Cleaning..
    CLEAN_NOZZLE

    PURGE_LINE

    M117

[gcode_macro PURGE_LINE]
description: Prime the nozzle
gcode:
    SAVE_GCODE_STATE NAME=PURGE_LINE
    {% set purge_start_x = params.PRINT_START_X|default(1.0)|float %}
    {% set purge_start_y = params.PRINT_START_Y|default(1.0)|float %}

    # purge/prime nozzle
    G90 # use absolute coordinates
    # go to the start of the print area
    G1 X{purge_start_x} Y{purge_start_y} Z0.3 F9000 # go to the purge start location
    G91 # relative coordinates
    M83 # extruder relative mode
    G92 E0.0
    G1 X250.0 E250.0 F600.0  # thick start line
    G1 Y3.0 E3.0 F600.0
    G1 X-200.0 E200.0 F600.0
    G1 X-25.0 E2.5 F1800.0  # thin outro line
    G1 X-5.0 E0 F1800.0  # move without extruding
    G92 E0                                                                              # Reset extruder distance
    M82                                                                                 # Absolute extrusion mode
    G0 Z0.5 F1800 # Z hop
    G1 F30000

[gcode_macro PRINT_WARMUP]
description: Perform initial heating tasks
variable_heatsoak_state: False
gcode: 
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	{% set SOAK_TEMP = params.SOAK_TEMP|default(60)|float %}
	{% set th = printer.toolhead %}

	{% if BED_TEMP > 85 %}
      {% set HEATSOAK_STATE = True %}
	{% else %}
      {% set HEATSOAK_STATE = False %}
	{% endif %}

    SET_GCODE_VARIABLE MACRO=PRINT_WARMUP VARIABLE=heatsoak_state VALUE={HEATSOAK_STATE}

    CLEAR_PAUSE

	{% if HEATSOAK_STATE == True %}
	G28
	M104 S{EXTRUDER_TEMP * 0.3}
	M140 S{BED_TEMP}
	G90
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z3 F30000
	M107
	HEAT_SOAK HEATER='heater_bed' TARGET={BED_TEMP} SOAKER='temperature_sensor chamber' SOAK_TEMP={SOAK_TEMP} CANCEL='CANCEL_PRINT' TIMEOUT=60
	{% endif %}

[gcode_macro PRINT_END]
description: The end of every print. Turn off heaters etc.
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 3} F3600  ; park nozzle at rear
    SAFE_LIFT_Z Z=50 F=3000.0
    M107                                     ; turn off fan
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0.0
    SET_FAN_SPEED FAN=nevermore_fan SPEED=0.0
    SET_VELOCITY_LIMIT ACCEL=10000
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    M18 ; turn off motors

[gcode_macro HOME_X] #Sensorless Homing only!
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 X
    # Move away
    G91
    G0 X-10 F1200
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro HOME_Y] #Sensorless Homing only!
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 Y
    # Move away
    G91
    G0 Y-10 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro HOME_Z]
gcode:
    {% set th = printer.toolhead %}

    G90
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F30000
    G28 Z
    G0 Z10

[gcode_macro SAFE_LIFT_Z]
description: Lifts Z only if it's save
gcode:
    SAVE_GCODE_STATE NAME=SAFE_LIFT_Z
    # user parameters
    {% set z_height      = params.Z|default(0.0)|float %}
    {% set speed         = params.F|default(printer.gcode_move.speed)|int %}
    {% set axis_maximum  = printer.toolhead.axis_maximum %}
	{% set position      = printer.toolhead.position     %}

    # compute the minimum safe upward move size
    {% set z_height = [z_height, axis_maximum.z - position.z]|min|float%}

    G91
    G1 Z{z_height} F{speed}

    RESTORE_GCODE_STATE NAME=SAFE_LIFT_Z

[gcode_macro SMARTHOME]
description: Only homes if necessary 
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %}
        G28
    {% endif %}

[gcode_macro IDLE_POS]
description: Move the printhead to a idle position
gcode:
    {% set th = printer.toolhead %}
    SAVE_GCODE_STATE NAME=IDLE_POS
    SMARTHOME
    M106 S0
    G90
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z{th.axis_maximum.z-50} F30000
    RESTORE_GCODE_STATE NAME=IDLE_POS

[gcode_macro LOAD_FILAMENT]
description: Load filament
gcode:
    SAVE_GCODE_STATE NAME=LOAD_FILAMENT
    M83
    G1 E50 F1000
    G1 E20 F1000
    G1 E30 F300
    G1 E30 F300
    RESTORE_GCODE_STATE NAME=LOAD_FILAMENT

[gcode_macro UNLOAD_FILAMENT]
description: Unload filament
gcode:
    SAVE_GCODE_STATE NAME=LOAD_FILAMENT
    M83
    G1 E10 F300
    G1 E-50 F1000
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=LOAD_FILAMENT